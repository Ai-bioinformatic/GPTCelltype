yourkey <- openai_key <- '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'
knitr::opts_chunk$set(echo = TRUE)
gptcelltype(
input = list(gs1 = c('CD4, CD3D'), gs2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = yourkey,
model = 'gpt-4'
)
gptcelltype <- function(input, tissuename=NULL, openai_key, model='gpt-4', topgenenumber = 10) {
Sys.setenv(OPENAI_API_KEY = openai_key)
if (class(input)=='list') {
input <- sapply(input,paste,collapse=',')
} else {
input <- tapply(input$gene,list(input$cluster),function(i) paste0(i[1:topgenenumber],collapse=','))
}
cutnum <- ceiling(length(input)/30)
if (cutnum > 1) {
cid <- as.numeric(cut(1:length(input),cutnum))
} else {
cid <- rep(1,length(input))
}
allres <- sapply(1:cutnum,function(i) {
id <- which(cid==i)
flag <- 0
while (flag == 0) {
k <- create_chat_completion(
model = model,
message = list(list("role" = "user", "content" = paste0('Identify cell types of ',tissuename,' cells using the following markers separately for each row. Only provide the cell type name. Do not show numbers before the name. Some can be a mixture of multiple cell types.\n',paste(input[id],collapse = '\n'))))
)
res <- strsplit(k$choices[,'message.content'],'\n')[[1]]
if (length(res)==length(id))
flag <- 1
}
names(res) <- names(input)[id]
res
},simplify = F)
unlist(allres)
}
gptcelltype(
input = list(gs1 = c('CD4, CD3D'), gs2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = yourkey,
model = 'gpt-4'
)
library(openai)
gptcelltype(
input = list(gs1 = c('CD4, CD3D'), gs2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = yourkey,
model = 'gpt-4'
)
gptcelltype(
input = list(gs1 = c('CD4, CD3D'), gs2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
model = 'gpt-4'
)
gptcelltype(
input = list(gs1 = c('CD4, CD3D'), gs2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', ## Please input your OpenAI key
model = 'gpt-4'
)
library(Seurat)
library(seurat)
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
install.packages('spatstat.explore')
remotes::install_github("satijalab/seurat", "seurat5", quiet = TRUE)
version
install.packages('Seurat')
library(Seurat)
data("pbmc_small")
all.markers <- FindAllMarkers(object = pbmc_small)
gptcelltype(all.markers,
tissuename = 'human PBMC',
openai_key = yourkey, ## Note: Please use your OpenAI key.
model = 'gpt-4'
)
gptcelltype <- function(input, tissuename=NULL, openai_key, model='gpt-4', topgenenumber = 10) {
Sys.setenv(OPENAI_API_KEY = openai_key)
if (class(input)=='list') {
input <- sapply(input,paste,collapse=',')
} else {
input <- tapply(input$gene,list(input$cluster),function(i) paste0(i[1:topgenenumber],collapse=','))
}
cutnum <- ceiling(length(input)/30)
if (cutnum > 1) {
cid <- as.numeric(cut(1:length(input),cutnum))
} else {
cid <- rep(1,length(input))
}
allres <- sapply(1:cutnum,function(i) {
id <- which(cid==i)
flag <- 0
while (flag == 0) {
k <- create_chat_completion(
model = model,
message = list(list("role" = "user", "content" = paste0('Identify cell types of ',tissuename,' cells using the following markers separately for each row. Only provide the cell type name. Do not show numbers before the name. Some can be a mixture of multiple cell types.\n',paste(input[id],collapse = '\n'))))
)
res <- strsplit(k$choices[,'message.content'],'\n')[[1]]
if (length(res)==length(id))
flag <- 1
}
names(res) <- names(input)[id]
res
},simplify = F)
unlist(allres)
}
knitr::opts_chunk$set(echo = TRUE)
yourkey = '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'
library(GPTCelltype)
yourkey = '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'
yourkey = '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'
library(openai)
library(Seurat)
data("pbmc_small")
all.markers <- FindAllMarkers(object = pbmc_small)
gptcelltype(all.markers,
tissuename = 'human PBMC',
openai_key = yourkey, ## Note: Please use your OpenAI key.
model = 'gpt-4'
)
gptcelltype(
input = list(cluster1 = c('CD4, CD3D'), cluster2 = 'CD14'),
tissuename = 'human PBMC',
openai_key = yourkey, ## Note: Please use your OpenAI key.
model = 'gpt-4'
)
library(GPTCelltype)
